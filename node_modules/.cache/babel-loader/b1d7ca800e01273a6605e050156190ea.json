{"ast":null,"code":"var _jsxFileName = \"/Users/kbhuwalka/Development/Web/woodlanders_react_app/src/components/ButtonList.js\";\nimport React, { Component } from 'react';\nimport Button from \"./Button\";\n\nclass ButtonList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onButtonClick = button => {\n      let active = this.state.activeButtons;\n\n      if (button.isActive) {\n        if (this.props.radio) active = [button.id];else active.push(button.id);\n      } else {\n        active = active.filter(x => x !== button.id);\n      }\n\n      console.log(this.props.radio);\n      this.setState({\n        activeButtons: active\n      });\n    };\n\n    this.getList = () => {\n      return this.props.list.map(item => React.createElement(Button, {\n        key: item,\n        buttonText: item,\n        width: \"130px\" //TODO: Make sure this is not hardcoded\n        ,\n        isActive: this.state.activeButtons.indexOf(item) > -1,\n        onButtonClick: this.onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      activeButtons: []\n    };\n  }\n\n  render() {\n    const width = {\n      minWidth: this.props.width\n    };\n    return React.createElement(\"div\", {\n      className: \"btn-list\",\n      style: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.getList());\n  }\n\n}\n\nexport default ButtonList;","map":{"version":3,"sources":["/Users/kbhuwalka/Development/Web/woodlanders_react_app/src/components/ButtonList.js"],"names":["React","Component","Button","ButtonList","constructor","props","onButtonClick","button","active","state","activeButtons","isActive","radio","id","push","filter","x","console","log","setState","getList","list","map","item","indexOf","render","width","minWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,aAPkB,GAOFC,MAAD,IAAY;AACzB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,aAAxB;;AACA,UAAGH,MAAM,CAACI,QAAV,EAAmB;AACjB,YAAG,KAAKN,KAAL,CAAWO,KAAd,EACEJ,MAAM,GAAG,CAACD,MAAM,CAACM,EAAR,CAAT,CADF,KAGEL,MAAM,CAACM,IAAP,CAAYP,MAAM,CAACM,EAAnB;AACH,OALD,MAKO;AACLL,QAAAA,MAAM,GAAGA,MAAM,CAACO,MAAP,CAAcC,CAAC,IAAIA,CAAC,KAAKT,MAAM,CAACM,EAAhC,CAAT;AACD;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWO,KAAvB;AACA,WAAKO,QAAL,CAAc;AACZT,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KArBiB;;AAAA,SAuBlBY,OAvBkB,GAuBR,MAAM;AACZ,aAAO,KAAKf,KAAL,CAAWgB,IAAX,CAAgBC,GAAhB,CAAqBC,IAAD,IACxB,oBAAC,MAAD;AACG,QAAA,GAAG,EAAGA,IADT;AAEG,QAAA,UAAU,EAAEA,IAFf;AAGG,QAAA,KAAK,EAAC,OAHT,CAGiB;AAHjB;AAIG,QAAA,QAAQ,EAAI,KAAKd,KAAL,CAAWC,aAAX,CAAyBc,OAAzB,CAAiCD,IAAjC,IAAyC,CAAC,CAJzD;AAKG,QAAA,aAAa,EAAI,KAAKjB,aALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAP;AASH,KAjCiB;;AAEhB,SAAKG,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AA8BDe,EAAAA,MAAM,GAAG;AACL,UAAMC,KAA0B,GAAG;AAC/BC,MAAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWqB;AADU,KAAnC;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,OAAL,EADL,CADJ;AAKH;;AA7C+B;;AAgDlC,eAAejB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from \"./Button\"\n\nclass ButtonList extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      activeButtons: []\n    }\n  }\n\n  onButtonClick= (button) => {\n    let active = this.state.activeButtons;\n    if(button.isActive){\n      if(this.props.radio)\n        active = [button.id]\n      else\n        active.push(button.id)\n    } else {\n      active = active.filter(x => x !== button.id)\n    }\n    console.log(this.props.radio)\n    this.setState({\n      activeButtons: active\n    })\n  }\n\n  getList = () => {\n      return this.props.list.map((item)=>\n         <Button\n            key= {item}\n            buttonText={item}\n            width=\"130px\" //TODO: Make sure this is not hardcoded\n            isActive = {this.state.activeButtons.indexOf(item) > -1}\n            onButtonClick = {this.onButtonClick}\n        ></Button>\n      )\n  }\n\n  render() {\n      const width: React.CSSProperties = {\n          minWidth: this.props.width,\n      }\n      return (\n          <div className=\"btn-list\" style={width}>\n              {this.getList()}\n          </div>\n      )\n  }\n}\n\nexport default ButtonList\n"]},"metadata":{},"sourceType":"module"}