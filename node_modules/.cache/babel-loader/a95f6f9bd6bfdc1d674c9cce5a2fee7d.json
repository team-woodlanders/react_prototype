{"ast":null,"code":"var _jsxFileName = \"/Users/kbhuwalka/Development/Web/woodlanders_react_app/src/Loading.js\";\nimport React, { Component } from 'react';\n\nclass Loading extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.click = () => {\n      const newState = !this.props.isActive;\n      this.props.onButtonClick({\n        id: this.props.buttonText,\n        isActive: newState\n      });\n    };\n\n    this.redirect = () => {\n      setTimeout(() => this.props.history.push(\"/results\"), 3000);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"loading-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/loading.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), this.redirect());\n  }\n\n}\n\nexport default Loading;","map":{"version":3,"sources":["/Users/kbhuwalka/Development/Web/woodlanders_react_app/src/Loading.js"],"names":["React","Component","Loading","click","newState","props","isActive","onButtonClick","id","buttonText","redirect","setTimeout","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAAA;AAAA;;AAAA,SAC3BE,KAD2B,GACnB,MAAM;AACV,YAAMC,QAAQ,GAAG,CAAC,KAAKC,KAAL,CAAWC,QAA7B;AACA,WAAKD,KAAL,CAAWE,aAAX,CAAyB;AACvBC,QAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,UADQ;AAEvBH,QAAAA,QAAQ,EAAEF;AAFa,OAAzB;AAGH,KAN0B;;AAAA,SAQ3BM,QAR2B,GAQhB,MAAM;AACfC,MAAAA,UAAU,CAAC,MAAM,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,CAAP,EAA4C,IAA5C,CAAV;AACD,KAV0B;AAAA;;AAY3BC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKJ,QAAL,EAFL,CADJ;AAMH;;AAnB0B;;AAsB/B,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Loading extends Component{\n    click = () => {\n        const newState = !this.props.isActive\n        this.props.onButtonClick({\n          id: this.props.buttonText,\n          isActive: newState})\n    }\n\n    redirect = () => {\n      setTimeout(() => this.props.history.push(\"/results\"), 3000);\n    }\n\n    render() {\n        return (\n            <div className=\"loading-container\">\n                <img src=\"/loading.png\"/>\n                {this.redirect()}\n            </div>\n        )\n    }\n}\n\nexport default Loading\n"]},"metadata":{},"sourceType":"module"}